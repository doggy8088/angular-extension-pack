{
	"import-LazyElementsModule": {
		"prefix": "ng-import-LazyElementsModule",
		"body": [
			"import { LazyElementsModule } from '@angular-extensions/elements';",
			"$0"
		],
		"description": "imports LazyElementsModule from '@angular-extensions/elements'"
	},
	"importFormsModule": {
		"prefix": "ng-import-FormsModule",
		"body": "import { FormsModule } from '@angular/forms';\n${0}",
		"description": "imports FormsModule from '@angular/forms'"
	},
	"importReactiveFormsModule": {
		"prefix": "ng-import-ReactiveFormsModule",
		"body": "import { ReactiveFormsModule } from '@angular/forms';\n${0}",
		"description": "imports ReactiveFormsModule from '@angular/forms'"
	},
	"importHttpClientModule": {
		"prefix": "ng-import-HttpClientModule",
		"body": "import { HttpClientModule } from '@angular/common/http';\n${0}",
		"description": "imports HttpClientModule from '@angular/common/http'"
	},
	"import-createCustomElement": {
		"prefix": "ng-import-elements",
		"body": [
			"import { Injector } from '@angular/core';",
			"import { createCustomElement } from '@angular/elements';",
			"$0"
		],
		"description": "imports createCustomElement and Injector for Angular Elements"
	},
	"ng-ctor-elements": {
		"prefix": "ng-elements",
		"body": [
			"$0constructor(private injector: Injector) {}",
			"",
			"ngDoBootstrap(): void {",
			"  const customElement = createCustomElement(${1:MadeWithLove}Component, { injector: this.injector });",
			"  customElements.define('${2:made-with-love}', customElement);",
			"}"
		],
		"description": "generates required Angular Elements boilerplate on AppModule"
	},
	"ngDoBootstrap": {
		"prefix": "ngDoBootstrap",
		"body": [
			"ngDoBootstrap(app): void {",
			"  $0",
			"}"
		],
		"description": "generates ngDoBootstrap() for AppModule"
	},
	"ng-bootstrapModule-NoopZone": {
		"prefix": "ng-bootstrapModule-NoopZone",
		"body": [
			"// Note: Remove the zone.js import from polyfills.ts",
			"platformBrowserDynamic().bootstrapModule(AppModule, { ngZone: 'noop' })",
			"  .catch(err => console.error(err));"
		],
		"description": ""
	},
	"ng-polyfills-zonejs-flags": {
		"prefix": "ng-polyfills-zonejs-flags",
		"body": [
			"// disable patching requestAnimationFrame",
			"(window as any).__Zone_disable_requestAnimationFrame = true;",
			"",
			"// disable patching specified eventNames",
			"(window as any).__zone_symbol__UNPATCHED_EVENTS = ['scroll', 'mousemove'];",
			"",
			"// disable patch onProperty such as onclick",
			"// (window as any).__Zone_disable_on_property = true;",
			"",
			"// bypass `zone.js` patch for IE/Edge developer tools",
			"// (window as any).__Zone_enable_cross_context_check = true;",
			"",
			"// disable any check for IE/Edge",
			"// (window as any).__Zone_disable_IE_check = true;"
		],
		"description": "Setting up Zone.js flags"
	}
}